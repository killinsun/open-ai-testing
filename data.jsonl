{"prompt": "who is Kill_In_Sun", "completion": "1993/03/11 生まれ。猫派であり Vim 派（最近まで VScode に浮気していたが、 Rails で書くことが多いので Rubymine を使うことが多い)。JavaScript/Node.js が好き。仕事は、1 社目 商社系 SIer の子会社でインフラエンジニアをしており、VMware & AWS & Azure を使ったクラウド基盤の設計・構築・運用までひととおり経験。 ストレージやバックアップ製品の運用設計、自動化も担当した。2 社目はWovn Technologies, Inc.で働き、2019/02 ~ 2022/04まではソリューションアーキテクト & 製品サポートページディレクターを担当した。主力製品の導入に向けた、導入サポートチームでソリューションアーキテクトを担当。 特に技術要件の複雑な案件を専門に担当するチームをリードする。 1 社目のエンジニアリング経験を大いに活用し、自社アプリ SDK や API 連携を交えた提案と導入サポートをおこなう。\n\nまた、上記顧客対応業務の傍ら、テクニカルライターとして製品サポートページを管理。体制拡大に伴い、製品サポートページ運用を立ち上げる。毎週新機能が提供される製品記事の更新運用を約 15 名体制で実施するに至る。"}
{"prompt":  "大会や、登壇の経歴", "completion": "2022/07/23 ISUCON 12 予選出場\n2021/08/21 ISUCON 11 予選出場\n2020/09/12 ISUCON 10 予選出場\n2019/09/08 ISUCON 9 予選出場\n2019/01/21 集まれ Kotlin 好き！Kolint 愛好会 vol.7 登壇\n2019/01/19 MSPJ マイグレーションコンペティション 2019winter 出場\n2018/01/27 MSPJ マイグレーションコンペティション 2018winter 出場\n2013/03/03 トラブル ★ しゅーたーず #5 優勝\n2013/02/10 モバイルアプリコンテスト 2012 最終プレゼン進出\n他多数"}
{"prompt":  "趣味", "completion": "デスメタル系ジャンルをこなよく愛す\n愛車は 新卒 1 年目に存在を知り、憧れ続けていた 光岡自動車のビュート\nDIY で家具を作る" }
{"prompt":  "ツイッターアカウント", "completion": "@Kill_In_Sun"}
{"prompt": "Portaudio側の処理", "completion": "前回の記事(Portaudio を Go 言語で触ってみた)分から変えたのは主に 75 行目付近。前回直接ファイルに書き込んでいたが、go-wav パッケージの NewWriter に io.Writer を投げられるので、今回はそのままファイルオブジェクト（のポインタ）を渡すことにした。"}
{"prompt": "Portaudioのコード", "completion": "package recorder\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\t\"time\"\n\n\t\"github.com/gordonklaus/portaudio\"\n)\n\ntype PCMRecorder struct {\n\tfile     *os.File\n\tFilePath string\n\tInterval int\n\tInput    []int16\n\tData     []int16\n\tstream   *portaudio.Stream\n}\n\nfunc NewPCMRecorder(filePath string, interval int) *PCMRecorder {\n\tvar pr = &PCMRecorder{\n\t\tFilePath: filePath,\n\t\tInterval: interval,\n\t}\n\treturn pr\n}\n\nfunc (pr PCMRecorder) Start(sig chan os.Signal) error {\n\tportaudio.Initialize()\n\tdefer portaudio.Terminate()\n\n\tpr.Input = make([]int16, 64)\n\tstream, err := portaudio.OpenDefaultStream(1, 0, 44100, len(pr.Input), pr.Input)\n\tif err != nil {\n\t\tlog.Fatalf(\"Could not open default stream \\n %v\", err)\n\t}\n\tpr.stream = stream\n\tpr.stream.Start()\n\tdefer pr.stream.Close()\n\n\tstartTime := pr.stream.Time()\n\nloop:\n\tfor {\n\t\telapseTime := (pr.stream.Time() - startTime).Round(time.Second)\n\n\t\tif err := pr.stream.Read(); err != nil {\n\t\t\tfmt.Println(err)\n\t\t\tlog.Fatalf(\"Could not read stream\\n%v\", err)\n\t\t}\n\n\t\t// Turn the volume up\n\t\tpr.Data = append(pr.Data, changeVolume(pr.Input, 10)...)\n\n\t\tselect {\n\t\tcase <-sig:\n\t\t\tbreak loop\n\t\tdefault:\n\t\t}\n\n\t\tif int(elapseTime.Seconds())%pr.Interval == 0 {\n\t\t\toutputFileName := fmt.Sprintf(pr.FilePath+\"_%d.wav\", int(elapseTime.Seconds()))\n\t\t\tif !exists(outputFileName) {\n\t\t\t\tpr.file, err = os.Create(outputFileName)\n\t\t\t\tif err != nil {\n\t\t\t\t\tlog.Fatalf(\"Could not create a new file to write \\n %v\", err)\n\t\t\t\t}\n\t\t\t\tdefer func() {\n\t\t\t\t\tif err := pr.file.Close(); err != nil {\n\t\t\t\t\t\tlog.Fatalf(\"Could not close output file \\n %v\", err)\n\t\t\t\t\t}\n\t\t\t\t}()\n\n\t\t\t\twav := NewWAVEncoder(pr.file, pr.Data)\n\t\t\t\twav.Encode()\n\t\t\t\tpr.Data = nil\n\t\t\t}\n\t\t}\n\t}\n\n\treturn nil\n}\n\nfunc changeVolume(input []int16, vol float32) (output []int16) {\n\toutput = make([]int16, len(input))\n\n\tfor i := 0; i < len(output); i++ {\n\t\toutput[i] = int16(float32(input[i]) * vol)\n\t}\n\n\treturn output\n}\n\nfunc exists(fileName string) bool {\n\t_, err := os.Stat(fileName)\n\treturn err == nil\n}"}
{"prompt": "go-wav 側のコード", "completion": "package recorder\n\nimport (\n\t\"fmt\"\n\t\"log\"\n\t\"os\"\n\n\t\"github.com/youpy/go-wav\"\n)\n\ntype WAVEncoder struct {\n\twriter     *wav.Writer\n\tnumSamples uint32\n\tbuf        []int16\n}\n\nfunc NewWAVEncoder(file *os.File, buf []int16) *WAVEncoder {\n\tw := &WAVEncoder{\n\t\tnumSamples: uint32(len(buf)),\n\t\tbuf:        buf,\n\t}\n\n\tw.writer = wav.NewWriter(file, w.numSamples, 1, 44100, 16)\n\treturn w\n}\n\nfunc (w *WAVEncoder) Encode() {\n\tsamples := make([]wav.Sample, w.numSamples)\n\tfor i := 0; i < int(w.numSamples); i++ {\n\t\tsamples[i].Values[0] = int(w.buf[i])\n\t}\n\n\tif err := w.writer.WriteSamples(samples); err != nil {\n\t\tfmt.Println(samples)\n\t\tlog.Fatalf(\"Could not write samples \\n %v\", err)\n\t}\n}"}
{"prompt": "Sample 形式への変換", "completion": "Encode() の最初に、 []int16 から Sample型に書き換える処理をおこなっている。for ブロック内で samples[i].Volumes[0] の Volumes[]はチャンネルを示しており、もし wav オブジェクトを初期化するときにチャンネル数が 2 つのステレオ形式で記録したいのであれば、 Volumes[0]に加えVolumes[1]にも値を代入すればよい。"}
{"prompt": "WriteSamples を用いて書き込み", "completion": "33 行目のWriteSamples() で io.Writer の実装に対して書き込み処理を行う。今回は os.File を投げたので ファイルに書き込まれる。\n\n"}
{"prompt": "やってみて", "completion": "go-wav パッケージのサンプルは wav形式のファイルを読み込む例しかなかったので、書き込み時の処理はどうすべきか、Sample型の構造を把握するのに時間がかかった。\n\nただ使ってみるととてもシンプルで使いやすいパッケージなので、2 チャンネルステレオ構造*の形式をいじる機会があれば活用していきたい。\n\n※ この記事の投稿時点でこのパッケージでは 2 チャンネルまでしか対応していなかった"}
{"prompt": "WovnTechnologiesとは", "completion": "Webサイト多言語化 SaaSを提供する会社"}
{"prompt": "会社設立日", "completion": "Wovn Technologies株式会社は2014年3月5日です。"}
{"prompt": "資本金", "completion": "Wovn Technologies株式会社の資本金は2021年9月1日現在53億6,701万円（資本準備金含む)"}
{"prompt": "代表者", "completion": "Wovn Technologies株式会社の代表取締役は林 鷹治です"}
{"prompt": "i18n", "completion": "WOVN は様々な情報を発信する上で、使われる全て言語や文化的背景、抽象化された概念までローカライズする為に必要な機能が全て揃っています。"}
{"prompt": "多言語化した情報をリアルタイムに情報発信するには", "completion": "WOVN を使えば、日本語コンテンツができてから英語ページの公開に1か月、その他の言語だと2か月かかる、なんてことから解放されます。日本語コンテンツの公開と同時に、多言語公開が可能なため、海外現地法人への強力な支援が実現できます。"}
{"prompt": "サポートが充実した多言語化ソフトは？", "completion": "WOVN は、Web サイト多言語化の経験豊富な日本人サポートが、導入の検討から運用までを支援します。環境設定で分からないことや、運用方法の検討までさまざまなご相談を承ります。"}
{"prompt": "ブランディングを意識して多言語化したい", "completion": "WOVN は、商品名や固有名詞など誤訳したくない用語は用語集で確実な翻訳が可能です。ライブエディター機能を使えば実際の画面をみながら翻訳編集ができるため、外国語翻訳でよくある文字長変更によるデザイン崩れも意識しながら翻訳適用ができます。"}
{"prompt": "WOVN の対応言語", "completion": "アラビア語 / バスク語 / ベンガル語 / ブルガリア語 / ビルマ語 / カタルーニャ語 / 簡体字（中国） / 繁体字（中国） / デンマーク語 / オランダ語 / 英語 / フィンランド語 / フランス語 / ガリシア語 / ドイツ語 / ギリシャ語 / ヘブライ語 / ヒンディー語 / ハンガリー語 / インドネシア語 / イタリア語 / 日本語 / クメール語 / 韓国語 / ラトビア語 / マレー語 / ネパール語 / ノルウェー語 / ペルシャ語 / ポーランド語 / ポルトガル語 / ロシア語 / シンハラ語 / スペイン語 / スワヒリ語 / スウェーデン語 / タガログ語 / タミル語 / タイ語 / トルコ語 / ウクライナ語 / ウルドゥー語 /ベトナム語 に対応しています。言語数は77言語に対応しております。詳しくは以下ページをご確認ください。https://wovn-support.zendesk.com/hc/ja/articles/360007899651?wovn=en"}
{"prompt": "WOVNの導入事例", "completion": "WOVN は 18,000以上のサイトに導入されており、PayPay株式会社、株式会社スクウェア・エニックス、トレジャーデータ株式会社などをはじめとした大手企業のウェブサイトに採用されています。"}


